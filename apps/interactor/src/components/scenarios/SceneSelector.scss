@import '../../variables';

.SceneSelector {
  position: relative;
  display: inline-flex;

  &__trigger {
    outline: none;
    padding: 0;
    margin: 0;
    display: inline-flex;

    font-size: 1.5rem;

    &:disabled {
      svg {
        color: gray;
        cursor: default;
      }
    }
  }

  &__list-container {
    h2 {
      text-align: center;
      padding: 1.5rem 1rem;
    }
  }

  &__list {
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  &__item {
    width: 100%;
    height: 100px;
    display: flex;
    align-items: center;
    text-align: left;
    font-size: 0.8em;
    position: relative;
    transition: all 0.2s ease-out;
    outline: none;

    &:hover {
      .SceneSelector__item-background {
        opacity: 0.7;
      }
      .SceneSelector__item-emotion {
        opacity: 1;
      }
    }

    &-background {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      opacity: 0.3;
      transition: all 0.2s ease-out;

      &--aero {
        opacity: 0.3;
        background: radial-gradient(
          ellipse at bottom,
          #0d1d31 30%,
          #0c0d13 100%
        );
        overflow: hidden;

        &:hover {
          opacity: 1;
        }
      }
    }

    &-emotion {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      width: auto;
      opacity: 0.6;
    }
  }

  &__item-text {
    margin-left: 1rem;
    color: white;
    background-color: #171717;
    z-index: 0;
    padding: 0.5rem 1rem;
    border-radius: 4px;
  }

  &--expanded {
    .SceneSelector__list-container {
    }
  }
}

/* STARS EFFECT */
@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.StarsEffect {
  position: relative;
  // top: 0;
  // left: 0;
  width: 100%;
  height: 100%;
  transform: rotate(-45deg);
  overflow: hidden;
}

.StarsEffect__star {
  $star-count: 50;
  --star-color: hsl(196, 78%, 61%);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(30em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite,
    tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  @include sp-layout {
    // For mobile performance, tail-fade animation will be removed QAQ
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random_range(500em, 750em) / 100};
      --top-offset: #{random_range(0vh, 2000vh) / 100};
      --fall-duration: #{random_range(6000, 12000s) / 1000};
      --fall-delay: #{random_range(0, 1s) / 1000};
    }
  }

  &::before,
  &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%,
  50% {
    width: var(--star-tail-length);
    opacity: 1;
  }

  70%,
  80% {
    width: 0;
    opacity: 0.4;
  }

  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}
