// Define base styles for the component
@import '../../variables';

.CutsceneDisplayer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  border-radius: 0.75rem; // This is equivalent to 'rounded-xl' in Tailwind
  box-shadow: 0px 0px 20px 0px rgb(205 95 234);

  &__content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  &__main-image-container {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    overflow: hidden;
    border-radius: 0.75rem; // Equivalent to 'rounded-xl' in Tailwind

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0) 10%);
    }
  }

  &__background-image,
  &__background-video,
  &__background-mobileVideo {
    height: 100%;
    width: 100%;
    z-index: 0;
    border-radius: 0.75rem; // Equivalent to 'rounded-xl' in Tailwind
    object-fit: cover;
    transition: all 0.2s ease-in;
    pointer-events: none;
    user-select: none;
  }

  &__mobileVideo {
    object-fit: none;
  }

  &__characters {
    position: absolute;
    bottom: 0;
    height: 90%;
    object-fit: cover;
    transition: all 0.2s ease-in;
    pointer-events: none;
    user-select: none;
    width: 100%;
    display: flex;
    justify-content: center;
  }

  &__emotion-renderer {
    z-index: 0;
    object-fit: contain;
    position: absolute;
    object-fit: cover;
    height: 100%;
    transition: all 0.2s ease-out;
    animation: up-and-down 3s ease-in-out infinite;
    right: 0;
  }

  &__characters--multiple {
    opacity: 1;
    z-index: 1;
    display: flex;
    width: 60%;
    justify-content: flex-end;
    position: absolute;
    right: 0;

    .CutsceneDisplayer__emotion-renderer {
      opacity: 1;
      width: 50%;
      object-fit: cover;

      &:first-child {
        left: 0;
      }

      &:last-child {
        right: 0;
      }
    }
  }

  &__text-container {
    position: absolute;
    top: 0;
    left: 0;
    padding: 20px;
    z-index: 2;
    width: 70%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  &__text {
    cursor: pointer;
    bottom: 35px;
    z-index: 1;
    text-shadow: 1.41px 1.41px black, 2px 0 black, 1.41px -1.41px black, 0 -2px black, -1.41px -1.41px black,
      -2px 0 black, -1.41px 1.41px black, 0 2px black;
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
    z-index: 2;
    width: fit-content;
    max-width: 100%;
    overflow: scroll;
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    & div {
      display: flex;
      flex-direction: column;
    }

    &.description {
      & p {
        color: #fff;
        font-style: italic;
      }
    }
    &.dialogue {
      & q {
        color: rgb(225, 138, 36);
      }
    }
  }

  &__buttons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 1;
    color: $color-gray;

    &-right,
    &-left {
      height: 100%;
      width: 20%;
      opacity: 0.3;
      transition: all 0.2s ease-in-out;

      &__text {
        font-size: 1.2rem;
        color: $color-white;
        display: flex;
        align-items: center;
        gap: 4px;
        justify-content: center;
      }

      &:hover {
        background-color: rgba(0, 0, 0, 0.237);
        cursor: pointer;
        opacity: 1;
        color: $color-light-gray;
      }
    }
  }

  &__music-player {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 3;
  }

  &__continue-button {
    cursor: pointer;
    color: #fff;
    transition: all 0.2s ease-in;
    display: flex;
    align-items: center;

    &:hover {
      color: $secondary-color;
    }
  }
}

@keyframes brightnessfade {
  0% {
    filter: brightness(0.6);
  }
  100% {
    filter: brightness(1);
  }
}

@keyframes up-and-down {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(2px);
  }
}
