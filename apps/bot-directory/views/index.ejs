<html>

<head>
  <link rel="stylesheet" href="/public/semantic.min.css">
  <link rel="stylesheet" href="/public/form.min.css">
  <link rel="icon" href="/public/favicon.ico" type="image/x-icon">
  <script src="/public/tailwind.js"></script>
  <title>Bot directory | Miku</title>
  <style>
    .ui.inverted.form .field textarea,
    .ui.inverted.form .dropdown,
    .ui.inverted.form .dropdown .item,
    .ui.inverted.form .field input {
      background-color: #1a202c;
      color: #fff;
    }

    .ui.menu.inverted .item.disabled {
      color: #fff !important;
    }

    .ui.card.inverted {
      background-color: #1a202c;
    }

    .ui.card.inverted .content .header,
    .ui.card.inverted .content .meta,
    .ui.card.inverted .content .description,
    .ui.card.inverted .extra.content {
      color: white;
    }

    .nsfw {
      position: absolute;
      z-index: 1;
      color: white;
      background-color: #FF4E67;
    }

    .scenarios-box {
      position: absolute;
      z-index: 1;
      color: white;
      background-color: #9747ff;
    }

    .blocker {
      background-color: #000;
      opacity: 50%;
      height: 100%;
      width: 100%;
      left: 0;
      top: 0;
      margin: 0;
      position: absolute;
      z-index: 2;
    }

    .modal-close {
      color: #888888;
    }

    .modal {
      position: absolute;
      z-index: 3;
      top: 35%;
      left: 30%;
      background-color: #1b1c1d;
    }

    .save-button {
      margin: 0 auto !important;
      display: block !important;
    }
  </style>
</head>

<body>
  <div class="basic segment">
    <%- include('header', {active: '/'}); %>
    <div class="flex px-8 py-2 gap-6 flex-wrap">
      <% bots.forEach(function(bot){ %>
      <div class="w-60 <%= bot.data.tags.includes("NSFW") ? 'nsfw-bot invisible' : '' %>">
        <div class="ui card">
          <%if (bot.data.tags.includes("NSFW")) { %>
          <span class="nsfw w-18 rounded-lg p-1">NSFW</span>
          <% } %>
          <%if (bot.data.extensions.mikugg.scenarios.length > 1) { %>
          <span class="scenarios-box w-18 rounded-lg p-1 right-0"><%= bot.data.extensions.mikugg.scenarios.length %> scenes</span>
          <% } %>
          <div class="image">
            <img src="/s3/assets/<%= bot.data.extensions.mikugg.profile_pic %>" style="object-fit: scale-down; width: 200px; height: 200px;">
          </div>
          <div class="content">
            <a class="header" href="http://localhost:5173/?cardId=<%= bot.hash%>" target="_blank"><%= bot.data.name %></a>
            <div class="description h-12 overflow-auto">
              <%= bot.data.extensions.mikugg.short_description || 'No description' %>
            </div>
          </div>
          <div class="extra content">
            <p>
              Version <%= bot.data.character_version %>
            </p>
            <p>
              Author: <%= bot.data.creator || 'Unknown' %>
            </p>
          </div>
          <div>
            <form action="/bot/delete/<%= bot.hash %>" method="POST" onsubmit="return confirm('Do you really want to delete <%= bot.data.name %>?');">
              <button type="submit" class="absolute text-red-600 right-2 bottom-4">
                <i class="trash icon"></i>
              </button>
            </form>
          </div>
        </div>
      </div>
      <% }); %>
    </div>

    <div class="blocker invisible">
    </div>

    <div class="modal upload-modal px-8 pt-6 pb-4 w-5/12 invisible">
      <form action="/bot" method="post" enctype="multipart/form-data" class="ui form">
        <label>
          <div class="flex">
            <h3 class="ui header">Upload a bot</h3>
            <button class="pb-8 ml-auto" onclick="toggle_open_modal(false)">
              <i class="modal-close close icon"></i>
            </button>
          </div>
          <input type="file" value="file" required accept=".json" name="file" id="file" />
        </label>
        <div class="mt-6">
          <button class="ui button" type="submit">Upload</button>
        </div>
      </form>
    </div>

    <div class="modal backend-modal px-8 pt-6 pb-4 w-5/12 invisible">
      <div class="flex">
        <h3 class="ui header">Configure Backend</h3>
        <button class="pb-8 ml-auto" onclick="toggle_backend_modal(false)">
          <i class="modal-close close icon"></i>
        </button>
      </div>
      <div class="flex gap-2">
        <p class="text-white w-24">API URL</p>
        <input class="mb-8 w-full mr-8" type="text" value="" placeholder="https://students-appears-injured-alto.trycloudflare.com/v1" required name="apiUrl" id="apiUrl" />
      </div>
      <div class="flex gap-2">
        <p class="text-white w-24">API Key</p>
        <input class="mb-8 w-full mr-8" type="text" value="" placeholder="sk-EMPTY" required name="apiKey" id="apiKey" />
      </div>
      <div class="flex gap-2">
        <p class="text-white w-24">Prompt Strategy</p>
        <input class="mb-8 w-full mr-8" type="text" value="" placeholder="alpacarp OR metharmerp" required name="strat" id="strat" />
      </div>
      <button class="ui button save-button w-64" onclick="save_backend_config()">Save</button>
    </div>
  </div>

  <!-- LIBS -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js" integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8=" crossorigin="anonymous"></script>
  <script src="/public/semantic.min.js"></script>
  <script src="/public/form.min.js"></script>
  <script>
    $(document).ready(function() {
      $('.dropdown').dropdown();

      // toggle button formatting
      $(".ui.checkbox").checkbox();

      // listen for changes to dark mode toggle buttons
      $(".dark_mode_toggle:checkbox").on("change", function() {
        change_theme($(this).is(":checked"));
      });

      $(".nsfw_toggle:checkbox").on("change", function() {
        toggle_nsfw($(this).is(":checked"));
      });
    });

    function change_theme(dark_mode) {
      if (dark_mode) {
        // for contrast with child segments
        $("body").css("background-color", "#282c34");
        // most Semantic UI elements have the "ui" class
        // useful to skip over elements with some class, such as "ignore_dark_mode"
        $(".ui").not(".ignore_dark_mode").addClass("inverted");
        // change the state of all dark mode toggle buttons
        $(".dark_mode_toggle:checkbox").prop("checked", true);
      } else {
        $("body").css("background-color", "");
        $(".inverted").not(".ignore_dark_mode").removeClass("inverted");
        $(".dark_mode_toggle:checkbox").prop("checked", false);
      }
    }

    function toggle_nsfw(nsfw) {
      if (nsfw) {
        $(".nsfw-bot").removeClass("invisible");
        $(".nsfw-bot").addClass("visible");
      } else {
        $(".nsfw-bot").removeClass("visible");
        $(".nsfw-bot").addClass("invisible");
      }
    }

    function toggle_open_modal(open) {
      if (open) {
        $(".upload-modal").removeClass("invisible");
        $(".upload-modal").addClass("visible");
        $(".blocker").removeClass("invisible");
        $(".blocker").addClass("visible");
      } else {
        $(".upload-modal").removeClass("visible");
        $(".upload-modal").addClass("invisible");
        $(".blocker").removeClass("visible");
        $(".blocker").addClass("invisible");
      }
    }

    function toggle_backend_modal(open) {
      if (open) {
        $(".backend-modal").removeClass("invisible");
        $(".backend-modal").addClass("visible");
        $(".blocker").removeClass("invisible");
        $(".blocker").addClass("visible");
      } else {
        $(".backend-modal").removeClass("visible");
        $(".backend-modal").addClass("invisible");
        $(".blocker").removeClass("visible");
        $(".blocker").addClass("invisible");
      }
    }

    function save_backend_config() {
      const apiUrl = document.getElementById('apiUrl').value
      const apiKey = document.getElementById('apiKey').value
      const strat = document.getElementById('strat').value

      const config = {
        apiUrl: apiUrl,
        apiKey: apiKey,
        strat: strat,
      }
      fetch("/save", {
        method: "POST",
        body: JSON.stringify(config),
        headers: {
          "Content-type": "application/json"
        }
      });
    }

    change_theme(true);
  </script>
</body>

</html>